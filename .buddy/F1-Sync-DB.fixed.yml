- pipeline: F1 Sync DB
  events:
  - type: SCHEDULE
    refs:
    - refs/heads/main
    start_date: 2025-05-04T22:00:00Z
    delay: 1440
  fail_on_prepare_env_warning: true
  variables:
  - key: DB_PASSWORD
    value: secure!lwJrjta6RQC+IsAhg3MKTFQgo6B6W0qdpaRQ86ube5g=.LHzzSTkRdXxJeRfC/KvDnA==
    type: VAR
    encrypted: true
    settable: ENABLED
    description: Password del database PostgreSQL
  - key: VERCEL_ORG_ID
    value: francostinos-projects
    type: VAR
    settable: ENABLED
    description: ID dell'organizzazione/utente Vercel
  - key: VERCEL_PROJECT_ID
    value: prj_1mtU4uLiKdVGfQRLy34QZAl5JD6w
    type: VAR
    settable: ENABLED
    description: ID del progetto Vercel
  - key: VERCEL_PROJECT_NAME
    value: f1-graphql
    type: VAR
    settable: ENABLED
    description: Nome del progetto Vercel da deployare
  - key: VERCEL_TOKEN
    value: secure!sCiWiQas1irMYlYbW6mltKG4WzuZQx2Z84aXcBYTKiI=.3EOGWASQehbWatUH0kb+0Q==
    type: VAR
    encrypted: true
    settable: ENABLED
    description: Token di accesso per Vercel
  actions:
  - action: Check and Update F1DB
    type: BUILD
    working_directory: /buddy/workspace
    docker_image_name: library/ubuntu
    docker_image_tag: 22.04
    execute_commands:
    - echo "Verifico l'ultima release disponibile..."
    - mkdir -p cache
    - LATEST_RELEASE_TAG=$(curl -s https://api.github.com/repos/f1db/f1db/releases/latest | jq -r .tag_name)
    - echo "Ultima release trovata $LATEST_RELEASE_TAG"
    - echo "$LATEST_RELEASE_TAG" > latest_release.txt
    - "if [ -f cache/last_release.txt ]; then"
    - '  echo "Ultima release precedente trovata $(cat cache/last_release.txt)"'
    - '  if cmp -s cache/last_release.txt latest_release.txt; then'
    - "    echo \"Nessuna nuova release, aggiornamento saltato\""
    - '    exit 0'
    - '  else'
    - "    echo \"Trovata nuova release, procedo con l'aggiornamento\""
    - '  fi'
    - else
    - "  echo \"Nessuna release precedente trovata, procedo...\""
    - fi
    - ""
    - echo "Download della nuova release..."
    - "DOWNLOAD_URL=$(curl -s https://api.github.com/repos/f1db/f1db/releases/latest | jq -r '.assets[] | select(.name == \"f1db-sql-postgresql.zip\") | .browser_download_url')"
    - echo "Scarico da $DOWNLOAD_URL"
    - curl -L "$DOWNLOAD_URL" -o f1db.zip
    - unzip f1db.zip
    - echo "Download e unzip completati"
    - echo "INIZIO ESECUZIONE PSQL"
    - SQL_FILE=$(find . -name "f1db-sql-postgresql.sql")
    - echo "Trovato file SQL $SQL_FILE"
    - timeout 5 bash -c "</dev/tcp/f1-graphql-db-f1-graphql.c.aivencloud.com/23000" || (echo "❌ Connessione al DB fallita" && exit 1)
    - PGPASSWORD="$DB_PASSWORD" psql -w -h f1-graphql-db-f1-graphql.c.aivencloud.com -p 23000 -U avnadmin -d defaultdb -v ON_ERROR_STOP=1 -f "$SQL_FILE"
    - echo "FINE ESECUZIONE PSQL"
    - cp latest_release.txt cache/last_release.txt
    - echo "Riferimento alla release aggiornato correttamente"
    - "echo \"Database aggiornato con successo, procedo con il deployment\""
    setup_commands:
    - apt-get update
    - apt-get install -y postgresql-client unzip curl jq apt-utils
  - action: Deploy to Vercel
    type: BUILD
    working_directory: /buddy/workspace
    docker_image_name: node
    docker_image_tag: latest
    execute_commands:
    - echo "Installazione delle dipendenze per il deployment..."
    - npm install -g vercel
    - echo "Avvio del deployment su Vercel..."
    - vercel --token "$VERCEL_TOKEN" --prod
    - echo "Deployment su Vercel completato con successo!"
    setup_commands:
    - apt-get update && apt-get install -y curl
    trigger_conditions:
    - trigger_condition: ALWAYS
      timezone: ""
      trigger_hours: []
      trigger_days: []
